#!/usr/bin/env node
var canned = require('../canned')
,   path = require('path')
,   http = require('http')
,   optimist = require('optimist')
,   argv = optimist
          .default('p', 3000)
          .alias('p', 'port')
          .describe('p', 'server port')
          .default('w', 'any')
          .alias('w', 'wildcard')
          .describe('w', 'wildcard path name for ids')
          .default('cors', true)
          .describe('cors', 'disable cors support')
          .default('headers', false)
          .describe('headers', 'add custom headers allowed in cors requests')
          .default('h', false)
          .alias('h', 'help')
          .describe('h', 'show the help')
          .default('fallback', false)
          .describe('fallback', 'fallback default folder')
          .usage('Usage: $0 [dir]')
          .argv

if (argv.h) {
  optimist.showHelp()
  return
}

var dir = ''
,   port = argv.p
,   cors = argv.cors
,   cors_headers = argv.headers
,   logger
,   cannedDir
,   wildcard = argv.wildcard
,   fallback = argv.fallback

if (argv._.length === 1) dir = argv._[0] // use the passed directory
if (argv.q) {
  logger = null // be quiet
} else {
  logger = process.stdout
  cannedDir = path.resolve(dir)
  fallbackNotice = fallback ? ", with fallback to "+path.resolve(fallback) : ""
  process.stdout.write('starting canned on port ' + port + ' for ' + cannedDir +  fallbackNotice + '\n')
}

var can = canned(dir, { logger: logger, cors: cors, cors_headers: cors_headers, wildcard: wildcard, fallback: fallback } )
http.createServer(can).listen(port)


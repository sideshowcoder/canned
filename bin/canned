#!/usr/bin/env node
var canned = require('../canned')
,   http = require('http')
,   optimist = require('optimist')
,   async = require('async')
,   fs = require('fs')
,   argv = optimist
          .default('p', 3000)
          .alias('p', 'port')
          .describe('p', 'server port')
          .default('cors', true)
          .describe('cors', 'disable cors support')
          .default('headers', false)
          .describe('headers', 'add custom headers allowed in cors requests')
          .default('h', false)
          .alias('h', 'help')
          .describe('h', 'show the help')
          .usage('Usage: $0 [dir]')
          .argv

var EXTENSIONS_DIR = __dirname + '/../extensions'

if (argv.h) {
  optimist.showHelp()
  return
}

var dir = ''
,   port = argv.p
,   cors = argv.cors
,   cors_headers = argv.headers
,   logger
,   cannedDir

if (argv._.length === 1) dir = argv._[0] // use the passed directory
if (argv.q) {
  logger = null // be quiet
} else {
  logger = process.stdout
  cannedDir = dir
  if (cannedDir.length === 0) cannedDir = './'
  process.stdout.write('starting canned on port ' + port + ' for ' + cannedDir + '\n')
}

var can = canned(dir, { logger: logger, cors: cors, cors_headers: cors_headers})

/**
 * We have to use extensions before main app
 * Becouse this will enable us to end processing
 */
var extensions
if(typeof argv.extensions === 'string'){
  extensions  = argv.extensions.split(',')
}else{
  extensions = []
}

async.map(
  extensions,
  function(extension, cb){
    fs.stat(EXTENSIONS_DIR + '/' + extension, function(err, stat){
      if(err || !stat.isDirectory())
        return cb(null)

      extension = require(EXTENSIONS_DIR + '/' + extension + '/main.js')

      var f = new extension({
        argv: argv,
        dir: dir
      })

      cb(null, f);
    })
  },
  function(err, extensions){
    extensions.filter(function(extension){
      return (typeof extension === 'function')
    })
    extensions.push(can)
    http.createServer(function(req, res){
      async.eachSeries(
        extensions,
        function(extension, cb){
          extension(req,res,cb)
        },
        function(err, res){}
      )
    }).listen(port)
  }
)
